/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include<iostream>
#include<vector>
#include<iterator>

int main(){

    int t1 = 1;
    int t2 = 2;
    int nextTerm = 0;
    int total = 0;
    const int limit = 4000000;
    std::vector<int> fibHolder;

    nextTerm = t1 + t2;

    //fibHolder.push_back(t1);  1 is not even....
    fibHolder.push_back(t2);                    //Entering the first 3 fib numbers into the vector

    while(nextTerm <= limit) {
        t1 = t2;
        t2 = nextTerm;
        if(nextTerm % 2 == 0) {
            fibHolder.push_back(nextTerm);  // we only want the evens
        }
        nextTerm = t1 + t2;
    }

    std::vector<int>::iterator iter;

    for(iter = fibHolder.begin(); iter != fibHolder.end(); iter++) {
        //std::cout << *iter << ", ";
        total += *iter;
    }
    //std::cout << std::endl;
    std::cout << total << std::endl;

    return 0;
}
